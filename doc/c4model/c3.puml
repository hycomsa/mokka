@startuml
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Component.puml

title Mokka - "Web Application" Component Diagram (C3)

Person(user, "User", "Manages mocks, views logs")
Person(adm, "Administrator", "Manages users, mocks and configuration of the system")
System_Ext(restServiceConsumer, "REST Service Consumer", "Calls stubbed REST services")
System_Ext(soapServiceConsumer, "SOAP Service Consumer", "Calls stubbed SOAP services")
System_Ext(jmsServiceConsumer, "JMS Service Consumer", "Calls stubbed JMS services")
System_Ext(paymentMerchant, "BlueMedia Payment Merchant", "Redirects to and consumes payment-related notifications")

ContainerDb(db, "Database", "SQL", "Stores users, stubs definitions and logs")

Container_Boundary(c1, "Web Application") {
    Component(gui, "Mokka GUI", "JavaScript, Bootstrap, AngularJS, Thymeleaf", "")
    Component(signInController, "Sign In", "Spring MVC Controller", "")
    Component(userMgmtController, "User Management API", "Spring MVC Rest Controller", "")
    Component(userMgmtComponent, "User Mgmt Component", "Spring Bean", "")
    Component(mockController, "Mocks Management API", "Spring MVC Rest Controller", "")
    Component(mockMgmtComponent, "Mocks Management Component", "Spring Bean", "")
    Component(mockSearchComponent, "Mocks Search Component", "Spring Bean", "")
    Component(paymentGui, "BlueMedia Fake Payment Page", "JavaScript, Bootstrap, Thymeleaf", "Provides fake implementation of BlueMedia payment page")
    Component(paymentController, "Payment Mock Controller", "Spring MVC Controller", "")
    Component(paymentComponent, "Payment Mock Component", "Spring Bean", "")
    Component(jmsListener, "Stubbed JMS APIs", "Spring SessionAwareMessageListener", "")
    Component(activemq, "Embedded ActiveMQ", "Spring Boot Embedded Active MQ", "")
    Component(httpServletInterceptor, "Stubbed HTTP APIs", "Spring Servlet HandlerInterceptor", "")
}

Rel(user, gui, "Uses")
Rel(adm, gui, "Uses")
Rel(gui, signInController, "Uses", "HTTP")
Rel(gui, mockController, "Uses", "JSON/HTTP")
Rel(gui, userMgmtController, "Uses", "JSON/HTTP")
Rel(signInController, userMgmtComponent, "Uses", "sync")
Rel(userMgmtComponent, db, "Uses", "JDBC")
Rel(userMgmtController, userMgmtComponent, "Uses", "sync")
Rel(userMgmtComponent, db, "Uses", "JDBC")
Rel(mockController, mockMgmtComponent, "Uses", "sync")
Rel(mockMgmtComponent, db, "Uses", "JDBC")
Rel(mockSearchComponent, db, "Uses", "JDBC")
Rel(jmsServiceConsumer, jmsListener, "Uses", "JMS")
Rel(soapServiceConsumer, jmsListener, "Uses", "SOAP/JMS")
Rel(jmsListener, activemq, "Uses", "sync")
Rel(jmsListener, mockSearchComponent, "Uses", "sync")
Rel(restServiceConsumer, httpServletInterceptor, "Uses", "HTTP")
Rel(soapServiceConsumer, httpServletInterceptor, "Uses", "SOAP/HTTP")
Rel(httpServletInterceptor, mockSearchComponent, "Uses", "sync")
Rel(paymentMerchant, paymentGui, "Redirects to and is notified by", "sync")
Rel(paymentGui, paymentController, "Uses", "sync")
Rel(paymentController, paymentComponent, "Uses", "sync")
@enduml
